// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  nome           String
  genero         String
  dataNascimento DateTime
  cpf            String   @unique
  email          String   @unique
  senha          String
  status         Boolean  @default(true)  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  telefone       Telefone?
  enderecos      Endereco[]
  cartoes        Cartao[]
}

model Telefone {
  id      Int    @id @default(autoincrement())
  tipo    String
  ddd     String
  numero  String

  userId  Int    @unique
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Endereco {
  id              Int    @id @default(autoincrement())
  nome            String
  tipoEndereco    String
  tipoResidencia  String
  tipoLogradouro  String
  logradouro      String
  numero          String
  bairro          String
  cep             String
  cidade          String
  estado          String
  pais            String
  observacoes     String?

  userId          Int
  user            User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Cartao {
  id        Int      @id @default(autoincrement())
  numero         String
  nome           String
  bandeira       String
  cvv            String
  preferencial   Boolean @default(false) 

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

